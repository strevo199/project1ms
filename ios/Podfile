require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

def node_require(script)
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

platform :ios, min_ios_version_supported
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
end

target 'starapp' do
  use_frameworks! :linkage => :static
  SRNFirebaseAsStaticFramework = true
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/..",
    :hermes_enabled => true  # Enable Hermes
  )

  pod 'Firebase/Analytics'
  pod 'Firebase/Messaging'

  target 'starappTests' do
    inherit! :complete
    # Pods for testing
  end

  # Store the config in a global variable to access it later
  $react_native_config = config
end # Closing the 'starapp' target block

post_install do |installer|
  react_native_post_install(
    installer,
    $react_native_config[:reactNativePath], # Use the global config
    :mac_catalyst_enabled => false,
  )

  # Optimize pod installation
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = min_ios_version_supported
    end
    # Fix for Xcode 14 warnings
    if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
      target.build_configurations.each do |config|
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
    end
  end
end # Closing the 'post_install' block
